{
  "openapi": "3.0.0",
  "info": {
    "title": "Chatbox API",
    "version": "1.0.0",
    "description": "API documentation for Chatbox backend",
    "contact": {
      "name": "Tareq Ghassan",
      "email": "tareq.abusaleh47@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "ServerConnection": {
        "type": "object",
        "properties": {
          "appKey": {
            "type": "string",
            "description": "Unique application key"
          },
          "appSecret": {
            "type": "string",
            "description": "Secret key for authentication"
          }
        },
        "required": [
          "appKey",
          "appSecret"
        ]
      },
      "Configuration": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Configuration name"
          },
          "code": {
            "type": "string",
            "description": "Configuration code"
          }
        },
        "required": [
          "name",
          "code"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique user ID"
          },
          "name": {
            "type": "string",
            "description": "Full name of the user"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address of the user"
          },
          "phoneNumber": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Country code"
              },
              "number": {
                "type": "string",
                "description": "Phone number"
              }
            }
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "Hashed password of the user"
          },
          "salt": {
            "type": "string",
            "format": "password",
            "description": "Salt used for password hashing"
          },
          "profileImage": {
            "type": "string",
            "description": "URL to the user's profile image"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "phoneNumber"
        ]
      }
    }
  },
  "paths": {
    "/login": {
      "post": {
        "summary": "User login",
        "description": "Authenticates a user and returns a JWT token.",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "User registration",
        "description": "Registers a new user and returns a JWT token.",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password",
                  "confirmPassword",
                  "countryCode",
                  "phoneNumber"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "format": "password"
                  },
                  "countryCode": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registration successful"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict - Email or phone number already exists"
          }
        }
      }
    },
    "/logout": {
      "post": {
        "summary": "User logout",
        "description": "Logs out the user by blacklisting the JWT token.",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful"
          },
          "400": {
            "description": "No token provided"
          },
          "401": {
            "description": "Unauthorized - Token invalid"
          }
        }
      }
    },
    "/chats": {
      "post": {
        "summary": "Get all chats",
        "description": "Retrieves a paginated list of chats the user is a participant of.",
        "tags": [
          "Chats"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "index",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/chat": {
      "post": {
        "summary": "Fetch a specific chat",
        "description": "Retrieves details of a chat by chat ID.",
        "tags": [
          "Chats"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "chatId": {
                    "type": "string",
                    "description": "ID of the chat to fetch."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved chat."
          },
          "400": {
            "description": "Bad request (missing or invalid chat ID)"
          },
          "401": {
            "description": "Unauthorized - User not authenticated"
          },
          "404": {
            "description": "Chat not found or user not a participant"
          }
        }
      },
      "delete": {
        "summary": "Delete a chat",
        "description": "Marks a chat as deleted for the user. If all participants delete it, the chat is permanently removed.",
        "tags": [
          "Chats"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "chatId": {
                    "type": "string",
                    "description": "ID of the chat to delete."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chat deleted successfully."
          },
          "400": {
            "description": "Bad request (invalid input)"
          },
          "401": {
            "description": "Unauthorized - User not authenticated"
          },
          "404": {
            "description": "Chat not found"
          }
        }
      }
    },
    "/archive": {
      "put": {
        "summary": "Archive a chat",
        "description": "Marks a chat as archived for the user.",
        "tags": [
          "Chats"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "chatId": {
                    "type": "string",
                    "description": "ID of the chat to archive."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chat archived successfully."
          }
        }
      }
    },
    "/unarchive": {
      "put": {
        "summary": "Unarchive a chat",
        "description": "Removes a chat from archived list for the user.",
        "tags": [
          "Chats"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "chatId": {
                    "type": "string",
                    "description": "ID of the chat to unarchive."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chat un archived successfully."
          },
          "400": {
            "description": "Bad request (invalid input)"
          },
          "401": {
            "description": "Unauthorized - User not authenticated"
          },
          "404": {
            "description": "Chat not found"
          }
        }
      }
    },
    "/mute": {
      "put": {
        "summary": "Mute a chat",
        "description": "Mutes notifications for a chat.",
        "tags": [
          "Chats"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "chatId": {
                    "type": "string",
                    "description": "ID of the chat to mute."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chat muted successfully."
          },
          "400": {
            "description": "Bad request (invalid input)"
          },
          "401": {
            "description": "Unauthorized - User not authenticated"
          },
          "404": {
            "description": "Chat not found"
          }
        }
      }
    },
    "/unmute": {
      "put": {
        "summary": "Unmute a chat",
        "description": "Un mutes notifications for a chat.",
        "tags": [
          "Chats"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "chatId": {
                    "type": "string",
                    "description": "ID of the chat to unmute."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chat unmuted successfully."
          },
          "400": {
            "description": "Bad request (invalid input)"
          },
          "401": {
            "description": "Unauthorized - User not authenticated"
          },
          "404": {
            "description": "Chat not found"
          }
        }
      }
    },
    "/messages": {
      "get": {
        "summary": "Fetch messages of a chat (paginated)",
        "description": "Retrieves paginated messages for a chat.",
        "tags": [
          "Messages"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "chatId": {
                    "type": "string",
                    "description": "ID of the chat to fetch messages from."
                  },
                  "index": {
                    "type": "integer",
                    "description": "Page number (default = 1)"
                  },
                  "perPage": {
                    "type": "integer",
                    "description": "Number of messages per page (default = 20)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Messages fetched successfully."
          },
          "400": {
            "description": "Bad request (invalid input)"
          },
          "401": {
            "description": "Unauthorized - User not authenticated"
          },
          "404": {
            "description": "Chat not found"
          }
        }
      }
    },
    "/sendMessage": {
      "post": {
        "summary": "Send a message",
        "description": "Sends a new message in a chat.",
        "tags": [
          "Messages"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "chatId": {
                    "type": "string",
                    "description": "ID of the chat to send the message to."
                  },
                  "messageType": {
                    "type": "string",
                    "enum": [
                      "text",
                      "image",
                      "video",
                      "audio",
                      "document",
                      "sticker",
                      "voiceNote",
                      "location"
                    ],
                    "description": "Type of message."
                  },
                  "content": {
                    "type": "string",
                    "description": "The text content of the message (if messageType is \"text\")."
                  },
                  "mediaUrl": {
                    "type": "string",
                    "description": "URL of the media file (if messageType is \"image\", \"video\", etc.)."
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "latitude": {
                        "type": "number"
                      },
                      "longitude": {
                        "type": "number"
                      }
                    },
                    "description": "Location data (if messageType is \"location\")."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Message sent successfully."
          },
          "400": {
            "description": "Bad request (invalid input)."
          },
          "401": {
            "description": "Unauthorized - User not authenticated."
          },
          "404": {
            "description": "Chat not found."
          }
        }
      }
    },
    "/editMessage": {
      "put": {
        "summary": "Edit a message",
        "description": "Allows the sender to edit a message.",
        "tags": [
          "Messages"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "messageId": {
                    "type": "string",
                    "description": "ID of the message to edit."
                  },
                  "newContent": {
                    "type": "string",
                    "description": "New content of the message."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message edited successfully."
          },
          "400": {
            "description": "Bad request (invalid input)."
          },
          "401": {
            "description": "Unauthorized - User not authenticated."
          },
          "403": {
            "description": "Forbidden - User is not the sender of the message."
          },
          "404": {
            "description": "Message not found."
          }
        }
      }
    },
    "/message": {
      "delete": {
        "summary": "Delete a message",
        "description": "Allows the sender to delete a message (soft delete).",
        "tags": [
          "Messages"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "messageId": {
                    "type": "string",
                    "description": "ID of the message to delete."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message deleted successfully."
          },
          "400": {
            "description": "Bad request (invalid input)."
          },
          "401": {
            "description": "Unauthorized - User not authenticated."
          },
          "403": {
            "description": "Forbidden - User is not the sender of the message."
          },
          "404": {
            "description": "Message not found."
          }
        }
      }
    },
    "/seen": {
      "put": {
        "summary": "Mark message as seen",
        "description": "Marks a message as seen by the user.",
        "tags": [
          "Messages"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "messageId": {
                    "type": "string",
                    "description": "ID of the message to mark as seen."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message marked as seen."
          },
          "400": {
            "description": "Bad request (invalid input)."
          },
          "401": {
            "description": "Unauthorized - User not authenticated."
          },
          "404": {
            "description": "Message not found."
          }
        }
      }
    },
    "/serverInit": {
      "post": {
        "summary": "Initialize server connection",
        "description": "Validates appKey and appSecret to initialize the server connection.",
        "tags": [
          "Initialization"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "appKey",
                  "appSecret"
                ],
                "properties": {
                  "appKey": {
                    "type": "string",
                    "description": "Unique application key"
                  },
                  "appSecret": {
                    "type": "string",
                    "description": "Secret key for authentication"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Server initialized successfully"
          },
          "400": {
            "description": "Invalid request, missing appKey or appSecret"
          },
          "401": {
            "description": "Unauthorized - Invalid appKey or appSecret"
          }
        }
      }
    },
    "/getConfiguration": {
      "get": {
        "summary": "Retrieve server configuration",
        "description": "Fetches the configuration settings including country codes.",
        "tags": [
          "Initialization"
        ],
        "responses": {
          "200": {
            "description": "Configuration retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "type": "string",
                          "example": "00000"
                        },
                        "message": {
                          "type": "string",
                          "example": "Success"
                        }
                      }
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "countryCodes": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Configuration"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "tags": []
}