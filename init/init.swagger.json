{
  "openapi": "3.0.0",
  "info": {
    "title": "Chatbox API",
    "version": "1.0.0",
    "description": "API documentation for Chatbox backend",
    "contact": {
      "name": "Tareq Ghassan",
      "email": "tareq.abusaleh47@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "ServerConnection": {
        "type": "object",
        "properties": {
          "appKey": {
            "type": "string",
            "description": "Unique application key"
          },
          "appSecret": {
            "type": "string",
            "description": "Secret key for authentication"
          }
        },
        "required": [
          "appKey",
          "appSecret"
        ]
      },
      "Configuration": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Configuration name"
          },
          "code": {
            "type": "string",
            "description": "Configuration code"
          }
        },
        "required": [
          "name",
          "code"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique user ID"
          },
          "name": {
            "type": "string",
            "description": "Full name of the user"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address of the user"
          },
          "phoneNumber": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Country code"
              },
              "number": {
                "type": "string",
                "description": "Phone number"
              }
            }
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "Hashed password of the user"
          },
          "salt": {
            "type": "string",
            "format": "password",
            "description": "Salt used for password hashing"
          },
          "profileImage": {
            "type": "string",
            "description": "URL to the user's profile image"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "phoneNumber"
        ]
      }
    }
  },
  "paths": {
    "/serverInit": {
      "post": {
        "summary": "Initialize server connection",
        "description": "Validates appKey and appSecret to initialize the server connection.",
        "tags": [
          "Initialization"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "appKey",
                  "appSecret"
                ],
                "properties": {
                  "appKey": {
                    "type": "string",
                    "description": "Unique application key"
                  },
                  "appSecret": {
                    "type": "string",
                    "description": "Secret key for authentication"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Server initialized successfully"
          },
          "400": {
            "description": "Invalid request, missing appKey or appSecret"
          },
          "401": {
            "description": "Unauthorized - Invalid appKey or appSecret"
          }
        }
      }
    },
    "/getConfiguration": {
      "get": {
        "summary": "Retrieve server configuration",
        "description": "Fetches the configuration settings including country codes.",
        "tags": [
          "Initialization"
        ],
        "responses": {
          "200": {
            "description": "Configuration retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "type": "string",
                          "example": "00000"
                        },
                        "message": {
                          "type": "string",
                          "example": "Success"
                        }
                      }
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "countryCodes": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Configuration"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Initialization",
      "description": "API for server initialization and configuration retrieval."
    }
  ]
}