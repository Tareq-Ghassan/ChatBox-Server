{
  "openapi": "3.0.0",
  "info": {
    "title": "Chatbox API",
    "version": "1.0.0",
    "description": "API documentation for Chatbox backend",
    "contact": {
      "name": "Tareq Ghassan",
      "email": "tareq.abusaleh47@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "ServerConnection": {
        "type": "object",
        "properties": {
          "appKey": {
            "type": "string",
            "description": "Unique application key"
          },
          "appSecret": {
            "type": "string",
            "description": "Secret key for authentication"
          }
        },
        "required": [
          "appKey",
          "appSecret"
        ]
      },
      "Configuration": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Configuration name"
          },
          "code": {
            "type": "string",
            "description": "Configuration code"
          }
        },
        "required": [
          "name",
          "code"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique user ID"
          },
          "name": {
            "type": "string",
            "description": "Full name of the user"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address of the user"
          },
          "phoneNumber": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Country code"
              },
              "number": {
                "type": "string",
                "description": "Phone number"
              }
            }
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "Hashed password of the user"
          },
          "salt": {
            "type": "string",
            "format": "password",
            "description": "Salt used for password hashing"
          },
          "profileImage": {
            "type": "string",
            "description": "URL to the user's profile image"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "phoneNumber"
        ]
      }
    }
  },
  "paths": {
    "/login": {
      "post": {
        "summary": "User login",
        "description": "Authenticates a user and returns a JWT token.",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "User registration",
        "description": "Registers a new user and returns a JWT token.",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password",
                  "confirmPassword",
                  "countryCode",
                  "phoneNumber"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "format": "password"
                  },
                  "countryCode": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registration successful"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict - Email or phone number already exists"
          }
        }
      }
    },
    "/logout": {
      "post": {
        "summary": "User logout",
        "description": "Logs out the user by blacklisting the JWT token.",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful"
          },
          "400": {
            "description": "No token provided"
          },
          "401": {
            "description": "Unauthorized - Token invalid"
          }
        }
      }
    }
  },
  "tags": []
}